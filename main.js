/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/addNewForm.js":
/*!***************************!*\
  !*** ./src/addNewForm.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"btnSubmitTask\": () => (/* binding */ btnSubmitTask),\n/* harmony export */   \"taskOrProject\": () => (/* binding */ taskOrProject)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _taskCreation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./taskCreation */ \"./src/taskCreation.js\");\n\n\n\n// Creating the form\nconst form = document.querySelector('.form');\nconst selectTaskOrProject = document.createElement('select');\nselectTaskOrProject.setAttribute('id', 'select');\nselectTaskOrProject.addEventListener('change', taskOrProject);\n\nconst optionTask = document.createElement('option');\noptionTask.setAttribute('value', 'task');\noptionTask.textContent = 'Task';\n\nconst optionProject = document.createElement('option');\noptionProject.setAttribute('value', 'project');\noptionProject.textContent = 'Project';\n\nconst x = document.createElement('img');\nx.src = './images/x.svg';\nx.classList.add('x');\nx.addEventListener('click', () => {\n  form.classList.toggle('removeTask');\n});\n\nconst addNewText = document.createElement('p');\naddNewText.textContent = 'Add New';\naddNewText.classList.add('addNewText');\n\nconst addToExistingProjects = document.createElement('select');\naddToExistingProjects.classList.add('selectValue');\n\nconst btnSubmit = document.querySelector('.addBtn');\nbtnSubmit.addEventListener('click', addNew);\n\nconst divCont = document.createElement('div');\n\n// Template for creating stuff in the form\nfunction createEle(ele, atr, val, text, eclass, eleTwo, eleTwoInputType, eleTwoClass, eleTwoText) {\n  const div = document.createElement('div');\n  div.classList.add('divName');\n\n  const element = document.createElement(ele);\n  element.setAttribute(atr, val);\n  element.textContent = text;\n  element.classList.add(eclass);\n  div.appendChild(element);\n\n  const elementTwo = document.createElement(eleTwo);\n  elementTwo.type = eleTwoInputType;\n  elementTwo.classList.add(eleTwoClass);\n  elementTwo.textContent = eleTwoText;\n\n  div.appendChild(elementTwo);\n\n  divCont.appendChild(div);\n  form.appendChild(divCont);\n}\n\n// If projects exist show them on add form\nfunction checkIfProjectsExist() {\n  (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(addToExistingProjects);\n  const div = document.createElement('div');\n  div.classList.add('divExistingProjects');\n\n  const existingProjects = JSON.parse(localStorage.getItem('projects'));\n  if (existingProjects === null) { return; }\n\n  const label = document.createElement('label');\n  label.textContent = 'Add to existing project:';\n\n  const optionNone = document.createElement('option');\n  optionNone.textContent = 'None';\n  addToExistingProjects.appendChild(optionNone);\n\n  for (let i = 0; i < existingProjects.length; i++) {\n    const option = document.createElement('option');\n    option.textContent = existingProjects[i];\n    addToExistingProjects.appendChild(option);\n  }\n\n  div.appendChild(label);\n  div.appendChild(addToExistingProjects);\n  divCont.appendChild(div);\n}\n\n// Task submit button, creates a new array and stores it as a new value in local storage\nfunction btnSubmitTask() {\n  const btnSubmit = document.querySelector('.btnSubmit');\n  btnSubmit.addEventListener('click', () => {\n    const nameValue = document.querySelector('.inputValue').value;\n    const descValue = document.getElementById('textarea').value;\n    const dateValue = document.querySelector('.inputValueDate').value;\n    let projectValue;\n    if (nameValue === '' || nameValue === ' ' || dateValue === '') {\n      alert('Please fill out task and date before you submit.');\n      return;\n    }\n    console.log(descValue);\n    form.classList.toggle('removeTask');\n    (0,_taskCreation__WEBPACK_IMPORTED_MODULE_1__.createTask)(nameValue, descValue, dateValue);\n\n    if (document.querySelector('.selectValue') !== null) {\n      projectValue = document.querySelector('.selectValue').value;\n      const setValue = {\n        nameValue, descValue, dateValue, projectValue,\n      };\n      localStorage.setItem(nameValue, JSON.stringify(setValue));\n    } else {\n      const setValue = { nameValue, descValue, dateValue };\n      localStorage.setItem(nameValue, JSON.stringify(setValue));\n    }\n  });\n}\n\n// Project submit button, creates a new key for projects value to display on page load\nfunction btnSubmitProject() {\n  const btnSubmitP = document.querySelector('.btnSubmitP');\n  btnSubmitP.addEventListener('click', () => {\n    const nameValue = document.querySelector('.inputValue').value;\n    if (nameValue === '' || nameValue === ' ') {\n      alert('Please fill out the project name before you submit.');\n      return;\n    }\n    const existingEntries = JSON.parse(localStorage.getItem('projects') || '[]');\n    for (let i = 0; i < existingEntries.length; i++) {\n      if (nameValue === existingEntries[i]) {\n        alert('A project with that name already exists.');\n        return;\n      }\n    }\n    existingEntries.push(nameValue);\n    localStorage.setItem('projects', JSON.stringify(existingEntries));\n    (0,___WEBPACK_IMPORTED_MODULE_0__.showProjectsFromStorage)();\n    form.classList.toggle('removeTask');\n    (0,___WEBPACK_IMPORTED_MODULE_0__.clickProjects)();\n  });\n}\n\n// If task is selected, create form for task, if project, create it for project\nfunction taskOrProject() {\n  if (selectTaskOrProject.value === 'task') {\n    (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(divCont);\n    createEle('label', 'for', 'name', 'Task Name: ', 'label', 'input', 'text', 'inputValue');\n    createEle('label', 'for', 'date', 'Due Date:  ', 'label', 'input', 'date', 'inputValueDate');\n    createEle('label', 'id', 'labelTxtArea', 'Description: ');\n    const txtForm = document.createElement('textarea');\n    txtForm.setAttribute('id', 'textarea');\n    divCont.appendChild(txtForm); // cant use the template to make this one\n    checkIfProjectsExist();\n    createEle('button', 'type', 'Button', 'Submit', 'btnSubmit');\n    btnSubmitTask();\n  } else if (selectTaskOrProject.value === 'project') {\n    (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(divCont);\n    createEle('label', 'for', 'name', 'Project Name: ', 'label', 'input', 'text', 'inputValue');\n    createEle('button', 'type', 'Button', 'Submit', 'btnSubmitP');\n    btnSubmitProject();\n  }\n}\n\nfunction addNew() {\n  (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(divCont);\n  document.querySelector('.editTask').classList.add('removeTask');\n  form.classList.toggle('removeTask');\n\n  selectTaskOrProject.appendChild(optionTask);\n  selectTaskOrProject.appendChild(optionProject);\n  form.appendChild(x);\n  form.appendChild(addNewText);\n  form.appendChild(selectTaskOrProject);\n  taskOrProject();\n}\n\n\n//# sourceURL=webpack://to-do-list/./src/addNewForm.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clickProjects\": () => (/* binding */ clickProjects),\n/* harmony export */   \"removeChildNodes\": () => (/* binding */ removeChildNodes),\n/* harmony export */   \"showLocalStorage\": () => (/* binding */ showLocalStorage),\n/* harmony export */   \"showProjectsFromStorage\": () => (/* binding */ showProjectsFromStorage)\n/* harmony export */ });\n/* harmony import */ var _taskCreation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./taskCreation */ \"./src/taskCreation.js\");\n/* harmony import */ var _showAllProjects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./showAllProjects */ \"./src/showAllProjects.js\");\n\n\n\nfunction removeChildNodes(toRemove) {\n  while (toRemove.hasChildNodes()) {\n    toRemove.removeChild(toRemove.firstChild);\n  }\n}\n\n// Change arrow and show projects\nfunction changeArrowOnSidebar() {\n  const imgArrow = document.querySelector('.toggle');\n  if (imgArrow.getAttribute('src') === './images/arrow-bottom.svg') {\n    imgArrow.src = './images/arrow-right.svg';\n  } else {\n    imgArrow.src = './images/arrow-bottom.svg';\n  }\n  divSidebar.classList.toggle('removeTask');\n}\n\nconst sidebarArrow = document.getElementById('projectsExpand');\nsidebarArrow.addEventListener('click', changeArrowOnSidebar);\n\nconst taskMain = document.querySelector('.tasksMain');\n\n// Creates all tasks on page load\nfunction showLocalStorage() {\n  removeChildNodes(taskMain);\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key === 'projects') { continue; }\n    const toCreate = (JSON.parse(localStorage[key]));\n    (0,_taskCreation__WEBPACK_IMPORTED_MODULE_0__.createTask)(toCreate.nameValue, toCreate.descValue, toCreate.dateValue);\n  }\n}\n\n// Shows all tasks on page load\nconst allTasks = document.querySelector('.showAllTasks');\nallTasks.addEventListener('click', () => {\n  showLocalStorage();\n  allTasks.classList.add('inSidebarClicked');\n  const project = document.querySelectorAll('.projectInSidebar');\n  project.forEach((para) => para.classList.remove('inSidebarClicked'));\n});\n\n// Shows all projects onsidebar\nlet divSidebar = document.querySelector('.projectsContainer');\nfunction showProjectsFromStorage() {\n  removeChildNodes(divSidebar);\n  const prArray = JSON.parse(localStorage.getItem('projects'));\n  if (prArray === null) { return; }\n\n  for (let i = 0; i < prArray.length; i++) {\n    const para = document.createElement('p');\n    para.classList.add('projectInSidebar');\n    para.textContent = prArray[i];\n    divSidebar.appendChild(para);\n  }\n}\n\n// Clicking a project in sidebar creates new tasks that belong to that project and shows only them\nfunction clickProjects() {\n  const projects = document.querySelectorAll('.projectInSidebar');\n  projects.forEach((project) => project.addEventListener('click', () => {\n    projects.forEach((project) => project.classList.remove('inSidebarClicked'));\n    project.classList.add('inSidebarClicked');\n    allTasks.classList.remove('inSidebarClicked');\n    removeChildNodes(taskMain);\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key === 'projects') { continue; }\n\n      const toCreate = (JSON.parse(localStorage[key]));\n      if (toCreate.projectValue === project.textContent) {\n        (0,_taskCreation__WEBPACK_IMPORTED_MODULE_0__.createTask)(toCreate.nameValue, toCreate.descValue, toCreate.dateValue);\n      }\n    }\n  }));\n}\n\nwindow.onload = showLocalStorage();\nwindow.onload = showProjectsFromStorage();\nwindow.onload = clickProjects();\n\n\n//# sourceURL=webpack://to-do-list/./src/index.js?");

/***/ }),

/***/ "./src/showAllProjects.js":
/*!********************************!*\
  !*** ./src/showAllProjects.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n\n\nconst divCont = document.createElement('div');\ndivCont.classList.add('divContainerRow');\n\nconst allProjectsP = document.createElement('p');\nallProjectsP.textContent = 'All projects';\n\nfunction allProjectsPage() {\n  const paragraphCont = document.querySelector('.forPara');\n  paragraphCont.classList.add('showAllProjectsParagraph');\n\n  paragraphCont.appendChild(allProjectsP);\n  document.querySelector('.editTask').classList.add('removeTask');\n  document.querySelector('.form').classList.add('removeTask');\n  document.querySelector('.addBtn').classList.add('removeTask');\n  document.querySelector('.sidebar').classList.add('removeTask');\n  document.querySelector('.tasksMain').classList.add('removeTask');\n\n  const prArray = JSON.parse(localStorage.getItem('projects'));\n  if (prArray === null || prArray.length === 0) {\n    (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(paragraphCont);\n    const para = document.createElement('p');\n    para.textContent = 'You have no created projects.';\n    paragraphCont.appendChild(para);\n  } else {\n    (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(divCont);\n    for (let i = 0; i < prArray.length; i++) {\n      const div = document.createElement('div');\n      div.classList.add('allProjects');\n\n      const divForP = document.createElement('div');\n      divForP.classList.add('divForP');\n\n      const h3 = document.createElement('h3');\n      h3.textContent = prArray[i];\n\n      const trashImg = document.createElement('img');\n      trashImg.src = './images/trash.svg';\n      trashImg.classList.add('removeTask', 'bin');\n      trashImg.addEventListener('click', () => {\n        divCont.removeChild(div);\n        for (let i = 0; i < localStorage.length; i++) {\n          const key = localStorage.key(i);\n          const toCreate = (JSON.parse(localStorage[key]));\n\n          const index = prArray.indexOf(prArray[i - 1]);\n          prArray.splice(index, 1);\n\n          localStorage.setItem('projects', JSON.stringify(prArray));\n\n          if (toCreate.projectValue === h3.textContent) {\n            localStorage.removeItem(localStorage.key(i));\n          }\n        }\n      });\n\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        const toCreate = (JSON.parse(localStorage[key]));\n        if (toCreate.projectValue === h3.textContent) {\n          const taskPara = document.createElement('p');\n          taskPara.textContent = toCreate.nameValue;\n          divForP.appendChild(taskPara);\n        }\n      }\n\n      div.appendChild(h3);\n      div.appendChild(divForP);\n      div.appendChild(trashImg);\n\n      div.addEventListener('mouseenter', () => {\n        trashImg.classList.remove('removeTask');\n      });\n\n      div.addEventListener('mouseleave', () => {\n        trashImg.classList.add('removeTask');\n      });\n\n      divCont.appendChild(div);\n    }\n    document.body.appendChild(divCont);\n  }\n}\n\nconst showAllProjects = document.querySelector('.showAllProjects');\nshowAllProjects.addEventListener('click', allProjectsPage);\n\n\n//# sourceURL=webpack://to-do-list/./src/showAllProjects.js?");

/***/ }),

/***/ "./src/taskCreation.js":
/*!*****************************!*\
  !*** ./src/taskCreation.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createTask\": () => (/* binding */ createTask),\n/* harmony export */   \"elemCreate\": () => (/* binding */ elemCreate)\n/* harmony export */ });\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! . */ \"./src/index.js\");\n/* harmony import */ var _addNewForm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./addNewForm */ \"./src/addNewForm.js\");\n\n\n\nconst divCont = document.createElement('div');\n\nfunction elemCreate(ele, eleText, eleTwo, eleTwoText, eleTwoClass, eleTwoType) {\n  const div = document.createElement('div');\n  const elem = document.createElement(ele);\n  elem.textContent = eleText;\n\n  const elemTwo = document.createElement(eleTwo);\n  elemTwo.placeholder = eleTwoText;\n  elemTwo.classList.add(eleTwoClass);\n  elemTwo.type = eleTwoType;\n\n  div.classList.add('divMargin');\n  div.appendChild(elem);\n  div.appendChild(elemTwo);\n  divCont.appendChild(div);\n}\n\nfunction editBtnSubmit(name) {\n  const form = document.querySelector('.editTask');\n  const editBtn = document.querySelector('.editBtn');\n  editBtn.addEventListener('click', () => {\n    form.classList.toggle('removeTask');\n    const nameValue = document.querySelector('.editName').value;\n    const descValue = document.querySelector('.editDesc').value;\n    const dateValue = document.querySelector('.editDate').value;\n    if (nameValue === '' || nameValue === ' ' || dateValue === '') {\n      alert('Please fill out task and date before you submit.');\n      return;\n    }\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key === 'projects') { continue; }\n\n      const toCreate = (JSON.parse(localStorage[key]));\n      if (toCreate.nameValue === name) {\n        localStorage.removeItem(localStorage.key(i));\n      }\n\n      if (toCreate.projectValue !== null) {\n        const { projectValue } = toCreate;\n        const selectTaskOrProject = {\n          nameValue, descValue, dateValue, projectValue,\n        };\n        localStorage.setItem(nameValue, JSON.stringify(selectTaskOrProject));\n      } else {\n        const selectTaskOrProject = { nameValue, descValue, dateValue };\n        localStorage.setItem(nameValue, JSON.stringify(selectTaskOrProject));\n      }\n    }\n    createTask(nameValue, descValue, dateValue);\n    (0,___WEBPACK_IMPORTED_MODULE_0__.showLocalStorage)();\n  });\n}\n\nfunction createTask(name, desc, dueDate) {\n  const div = document.createElement('div');\n  div.classList.add('divTask');\n\n  const para = document.createElement('p');\n  para.classList.add('task');\n  para.textContent = name;\n  div.appendChild(para);\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i);\n    if (key === 'projects') { continue; }\n    const toCreate = (JSON.parse(localStorage[key]));\n    if (toCreate.nameValue === name) {\n      if (toCreate.completed !== undefined) {\n        para.classList.add('completed');\n      }\n    }\n  }\n\n  const paraDesc = document.createElement('p');\n  paraDesc.textContent = desc;\n  paraDesc.classList.add('removeTask', 'taskParagraph');\n  para.append(paraDesc);\n\n  const paraDate = document.createElement('p');\n  paraDate.textContent = `Due date: ${dueDate}`;\n  paraDate.classList.add('removeTask', 'taskDate');\n  para.append(paraDate);\n\n  const divImgCont = document.createElement('div');\n  divImgCont.classList.add('divExistingProjects');\n\n  const imgComplete = document.createElement('img');\n  imgComplete.classList.add('removeTask');\n  imgComplete.src = './images/check-square.svg';\n  imgComplete.addEventListener('click', () => {\n    para.classList.toggle('completed');\n\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key === 'projects') { continue; }\n      const toCreate = (JSON.parse(localStorage[key]));\n      if (toCreate.nameValue === name) {\n        const { nameValue } = toCreate;\n        const { descValue } = toCreate;\n        const { dateValue } = toCreate;\n        const { projectValue } = toCreate;\n        const completed = 'completed';\n\n        if (toCreate.completed !== undefined) {\n          const selectTaskOrProject = {\n            nameValue, descValue, dateValue, projectValue,\n          };\n          localStorage.setItem(nameValue, JSON.stringify(selectTaskOrProject));\n        } else {\n          const selectTaskOrProject = {\n            nameValue, descValue, dateValue, projectValue, completed,\n          };\n          localStorage.setItem(nameValue, JSON.stringify(selectTaskOrProject));\n        }\n      }\n    }\n  });\n\n  const imgDelete = document.createElement('img');\n  imgDelete.classList.add('removeTask');\n  imgDelete.src = './images/trash.svg';\n  // Deletes values when you press the bin\n  imgDelete.addEventListener('click', () => {\n    (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(div);\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key === 'projects') { continue; }\n      const toCreate = (JSON.parse(localStorage[key]));\n      if (toCreate.nameValue === name) {\n        localStorage.removeItem(localStorage.key(i));\n      }\n    }\n  });\n\n  const imgEdit = document.createElement('img');\n  imgEdit.classList.add('removeTask', 'edit');\n  imgEdit.src = './images/edit.svg';\n  const form = document.querySelector('.editTask');\n  imgEdit.addEventListener('click', () => {\n    document.querySelector('.form').classList.add('removeTask');\n    form.classList.toggle('removeTask');\n    (0,___WEBPACK_IMPORTED_MODULE_0__.removeChildNodes)(divCont);\n\n    const editX = document.createElement('img');\n    editX.src = './images/x.svg';\n    editX.classList.add('x');\n    divCont.appendChild(editX);\n    editX.addEventListener('click', () => {\n      form.classList.toggle('removeTask');\n    });\n\n    elemCreate('label', 'Edit Task Name: ', 'input', name, 'editName', 'text');\n    elemCreate('label', 'Edit Task Date: ', 'input', dueDate, 'editDate', 'date');\n    elemCreate('label', 'Edit Task Description: ', 'input', desc, 'editDesc', 'text');\n\n    const editBtn = document.createElement('button');\n    editBtn.type = 'button';\n    editBtn.classList.add('editBtn');\n    editBtn.textContent = 'Submit';\n\n    divCont.appendChild(editBtn);\n    form.appendChild(divCont);\n    editBtnSubmit(name);\n  });\n\n  divImgCont.appendChild(imgComplete);\n  divImgCont.appendChild(imgEdit);\n  divImgCont.appendChild(imgDelete);\n  div.appendChild(divImgCont);\n\n  document.querySelector('.tasksMain').appendChild(div);\n\n  para.addEventListener('click', () => {\n    paraDesc.classList.toggle('removeTask');\n    paraDate.classList.toggle('removeTask');\n    para.classList.toggle('taskShowDateAndDesc');\n  });\n\n  div.addEventListener('mouseover', () => {\n    imgDelete.classList.add('removeTaskShow');\n    imgEdit.classList.add('removeTaskShow');\n    imgComplete.classList.add('removeTaskShow');\n  });\n\n  div.addEventListener('mouseleave', () => {\n    imgDelete.classList.remove('removeTaskShow');\n    imgEdit.classList.remove('removeTaskShow');\n    imgComplete.classList.remove('removeTaskShow');\n  });\n}\n\n\n//# sourceURL=webpack://to-do-list/./src/taskCreation.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;